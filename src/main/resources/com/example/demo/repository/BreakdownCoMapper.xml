<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.BreakdownCoMapper">
    <!-- マッピング（SELECT文用resultMap） -->
    <resultMap id="breakdownCoResult" type="com.example.demo.entity.BreakdownCo">
        <id column="bco_id" property="bcoId" />
        <result column="bco_cc_id" property="bcoCcId" />
        <result column="bco_co_id" property="bcoCoId" />
        <result column="bco_price" property="bcoPrice" />
        <result column="sum_bco_price" property="sumBcoPrice" />
        <result column="ratio" property="ratio" />
        <result column="bco_created_at" property="bcoCreatedAt" />
        <result column="bco_updated_at" property="bcoUpdatedAt" />
        <result column="bco_latest_editor" property="bcoLatestEditor" />
        <result column="bco_delete_flg" property="bcoDeleteFlg" />
        <association property="employee" javaType="com.example.demo.entity.Employee">
            <id column="code" property="code" />
            <result column="first_name" property="firstName" />
            <result column="last_name" property="lastName" />
            <result column="password" property="password" />
            <result column="role" property="role" />
            <result column="created_at" property="createdAt" />
            <result column="updated_at" property="updatedAt" />
            <result column="delete_flg" property="deleteFlg" />
        </association>
        <association property="constructionContract" javaType="com.example.demo.entity.ConstructionContract">
            <id column="cc_id" property="ccId" />
            <result column="cc_dc_id" property="ccDcId" />
            <result column="cc_et_id" property="ccEtId" />
            <result column="estimate_year" property="estimateYear" />
            <result column="estimate_month" property="estimateMonth" />
            <result column="construction_period" property="constructionPeriod" />
            <result column="project_name" property="projectName" />
            <result column="site_address" property="siteAddress" />
            <result column="site_area" property="siteArea" />
            <result column="separete_construction" property="separeteConstruction" />
            <result column="planned_price" property="plannedPrice" />
            <result column="contract_price" property="contractPrice" />
            <result column="turnover_rate" property="turnoverRate" />
            <result column="contractor_name" property="contractorName" />
            <result column="remarks_section" property="remarksSection" />
            <result column="blueprint_address" property="blueprintAddress" />
            <result column="cc_created_at" property="ccCreatedAt" />
            <result column="cc_updated_at" property="ccUpdatedAt" />
            <result column="cc_latest_editor" property="ccLatestEditor" />
            <result column="cc_delete_flg" property="ccDeleteFlg" />
        </association>
        <association property="categoryOutline" javaType="com.example.demo.entity.CategoryOutline">
            <id column="co_id" property="coId" />
            <result column="co_type_name" property="coTypeName" />
        </association>
    </resultMap>
    <!-- 金額取得 -->
    <select id="priceSelectById" resultMap="breakdownCoResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT *
        FROM breakdown_co
        WHERE bco_delete_flg = 0 AND bco_cc_id = #{bcoCcId} AND bco_co_id = #{bcoCoId};
    </select>
    <!-- 合計取得 -->
    <select id="selectSumById" resultMap="breakdownCoResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT SUM(bco_price) AS sum_bco_price
        FROM breakdown_co
        WHERE bco_delete_flg = 0 AND bco_cc_id = #{bcoCcId} AND
              <![CDATA[(bco_co_id >= #{bcoCoId1} AND bco_co_id <= #{bcoCoId2})]]>;
    </select>
    <!-- 特定取得 -->
    <select id="selectAllById" resultMap="breakdownCoResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT bco_id, bco_cc_id, bco_co_id, construction_contract.project_name,
            category_outline.co_type_name, bco_price,
            CASE category_outline.co_id WHEN 1110
                THEN CONCAT('(税率', round(bco_price / #{totalConstructionPrice} * 100, 0), '%)')
                ELSE CONCAT(round(bco_price / #{directConstructionPrice} * 100, 1), '%')
            END AS ratio
        FROM breakdown_co
        JOIN construction_contract ON breakdown_co.bco_cc_id = construction_contract.cc_id
        JOIN category_outline ON breakdown_co.bco_co_id = category_outline.co_id
        WHERE bco_delete_flg = 0 AND bco_cc_id = #{bcoCcId}
        ORDER BY category_outline.co_id;
    </select>
    <!-- 一件取得 -->
    <select id="selectById" resultMap="breakdownCoResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT *
        FROM breakdown_co
        JOIN employee ON breakdown_co.bco_latest_editor = employee.code
        JOIN construction_contract ON breakdown_co.bco_cc_id = construction_contract.cc_id
        JOIN category_outline ON breakdown_co.bco_co_id = category_outline.co_id
        WHERE bco_delete_flg = 0 AND bco_id = #{bcoId}
        ORDER BY category_outline.co_id;
    </select>
    <!-- 登録実行 -->
    <insert id="insert" parameterType="com.example.demo.entity.BreakdownCo">
        <!-- 論理削除採用のため「delete_flg」と値「0」を追記 -->
        INSERT INTO breakdown_co (bco_cc_id, bco_co_id, bco_price,
            bco_created_at, bco_updated_at, bco_latest_editor, bco_delete_flg)
        VALUES (#{bcoCcId}, #{bcoCoId}, #{bcoPrice},
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #{bcoLatestEditor}, 0);
    </insert>
    <!-- 更新実行 -->
    <update id="update" parameterType="com.example.demo.entity.BreakdownCo">
        <!-- 論理削除採用のため「delete_flg」と値「0」を追記 -->
        UPDATE breakdown_co
        SET bco_cc_id = #{bcoCcId}, bco_co_id = #{bcoCoId},
            bco_price = #{bcoPrice}, bco_updated_at = CURRENT_TIMESTAMP,
            bco_latest_editor = #{bcoLatestEditor}
        WHERE bco_id = #{bcoId};
    </update>
    <!-- 削除実行 -->
    <delete id="delete" parameterType="Integer">
        <!-- 物理削除　↓　※物理削除ではリレーションがある場合に削除エラーが発生するため論理削除へ変更
        DELETE FROM breakdown_co
        WHERE bco_id = #{bcoId}; -->
        <!-- 論理削除　↓ ※select、insertの各SQLに「delete_flg」を追記 -->
        UPDATE breakdown_co
        SET bco_delete_flg = 1
        WHERE bco_id = #{bcoId};
    </delete>
</mapper>