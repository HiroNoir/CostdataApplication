<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.DesignContractMapper">
    <!-- マッピング（SELECT文用resultMap） -->
    <resultMap id="designContractResult" type="com.example.demo.entity.DesignContract">
        <id column="dc_id" property="dcId" />
        <result column="contract_number" property="contractNumber" />
        <result column="contract_name" property="contractName" />
        <result column="customer_name" property="customerName" />
        <result column="dc_created_at" property="dcCreatedAt" />
        <result column="dc_updated_at" property="dcUpdatedAt" />
        <result column="dc_latest_editor" property="dcLatestEditor" />
        <result column="dc_delete_flg" property="dcDeleteFlg" />
        <association property="employee" javaType="com.example.demo.entity.Employee">
            <id column="code" property="code" />
            <result column="first_name" property="firstName" />
            <result column="last_name" property="lastName" />
            <result column="password" property="password" />
            <result column="role" property="role" />
            <result column="created_at" property="createdAt" />
            <result column="updated_at" property="updatedAt" />
            <result column="delete_flg" property="deleteFlg" />
        </association>
    </resultMap>
    <!-- 全件取得 -->
    <select id="selectAll" resultMap="designContractResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT dc_id, contract_number, contract_name, customer_name
        FROM design_contract
        WHERE dc_delete_flg = 0
        ORDER BY contract_number;
    </select>
    <!-- 一件取得 -->
    <select id="selectById" resultMap="designContractResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT *
        FROM design_contract
        JOIN employee ON design_contract.dc_latest_editor = employee.code
        WHERE dc_delete_flg = 0 AND dc_id = #{dcId};
    </select>
    <!-- 登録実行 -->
    <insert id="insert" parameterType="com.example.demo.entity.DesignContract">
        <!-- 論理削除採用のため「delete_flg」と値「0」を追記 -->
        INSERT INTO design_contract (contract_number, contract_name, customer_name,
            dc_created_at, dc_updated_at, dc_latest_editor, dc_delete_flg)
        VALUES (#{contractNumber}, #{contractName}, #{customerName},
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #{dcLatestEditor}, 0);
    </insert>
    <!-- 更新実行 -->
    <update id="update" parameterType="com.example.demo.entity.DesignContract">
        <!-- 論理削除採用のため「delete_flg」と値「0」を追記 -->
        UPDATE design_contract
        SET contract_number = #{contractNumber}, contract_name = #{contractName},
            customer_name = #{customerName}, dc_updated_at = CURRENT_TIMESTAMP,
            dc_latest_editor = #{dcLatestEditor}
        WHERE dc_id = #{dcId};
    </update>
    <!-- 削除実行 -->
    <delete id="delete" parameterType="Integer">
        <!-- 物理削除　↓　※物理削除ではリレーションがある場合に削除エラーが発生するため論理削除へ変更
        DELETE FROM design_contract
        WHERE dc_id = #{dcId}; -->
        <!-- 論理削除　↓ ※select、insertの各SQLに「delete_flg」を追記 -->
        UPDATE design_contract
        SET dc_delete_flg = 1
        WHERE dc_id = #{dcId};
    </delete>
</mapper>